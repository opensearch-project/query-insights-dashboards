name: Build and test workflow
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
env:
  OPENSEARCH_DASHBOARDS_VERSION: 'main'
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  Get-CI-Image-Tag:
    uses: opensearch-project/opensearch-build/.github/workflows/get-ci-image-tag.yml@main
    with:
      product: opensearch-dashboards

  build-and-test:
    name: Build query-insights-dashboards plugin and run unit tests
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      # Enable longer filenames for windows
      - name: Enable longer filenames
        if: ${{ matrix.os == 'windows-latest' }}
        run: git config --system core.longpaths true
      - name: Checkout OpenSearch-Dashboards
        uses: actions/checkout@v4
        with:
          repository: opensearch-project/OpenSearch-Dashboards
          ref: ${{ env.OPENSEARCH_DASHBOARDS_VERSION }}
          path: OpenSearch-Dashboards
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: './OpenSearch-Dashboards/.nvmrc'
          registry-url: 'https://registry.npmjs.org'
      - name: Install Yarn
        # Need to use bash to avoid having a windows/linux specific step
        shell: bash
        run: |
          YARN_VERSION=$(node -p "require('./OpenSearch-Dashboards/package.json').engines.yarn")
          echo "Installing yarn@$YARN_VERSION"
          npm i -g yarn@$YARN_VERSION
      - run: node -v
      - run: yarn -v
      - name: Checkout Query Insights OpenSearch Dashboards plugin
        uses: actions/checkout@v4
        with:
          path: OpenSearch-Dashboards/plugins/query-insights-dashboards
      - name: Bootstrap plugin/OpenSearch-Dashboards
        run: |
          cd OpenSearch-Dashboards/plugins/query-insights-dashboards
          yarn osd bootstrap
      - name: Run unit tests
        run: |
          cd OpenSearch-Dashboards/plugins/query-insights-dashboards
          yarn run test:jest --coverage
      - name: Uploads coverage
        uses: codecov/codecov-action@v1
